// 클라이언트가 보내는 요청의 한 가지 단점 -> 누가 요청을 보냈는지 모름
// 요청을 보내는 컴퓨터의 IP주소나 브라우저의 정보를 담을 수는 있지만,
// 여러 컴퓨터가 동일한 IP주소를 가질 수 있고, 한 컴퓨터를 여러 사람이 사용할 수 있다.

// 해결방법: 로그인 구현
// 로그인 -> 쿠키와 세션 필요
// 새로운 요청(새로고침, 페이지 이동 등)을 해도 로그인이 풀리지 않는 이유 
// -> 따로 로그인 작업을 하지 않아도 한 번 로그인 시도를 했을 때의 정보가 쿠키나 세션에 저장되어서
//    새로운 요청시 자동으로 서버에 전송이 되기 때문.

// 쿠키 -> 유효기간, name=haksoo 와 같이 키=값 형태
// 서버로부터 쿠키가 오면, 웹 브라우저는 쿠키를 저장해뒀다가 다음에 요청할 때마다 쿠키를 동봉해서 보냄
// 서버는 요청에 들어있는 쿠키를 읽어서 사용자가 누구인지를 파악함
// -> 서버에서 브라우저로 쿠키를 보낼 때만 코드를 작성해서 처리하면 된다.

// 개인정보 유출 방지를 위해 쿠키를 주기적으로 지울 것을 권고하는 것은 바로 이러한 이유 때문

// 쿠키는 요청의 헤더(Cookie)에 담겨 전송됩니다. 브라우저는 응답의 헤더(Set-Cookie)에 따라 쿠키를 저장합니다.


// • 쿠키명=쿠키값: 기본적인 쿠키의 값입니다. mycookie=test 또는 name=zerocho와 같이 설정합니다.

// • Expires=날짜: 만료 기한입니다. 이 기한이 지나면 쿠키가 제거됩니다. 기본값은 클라이언트가 종료될 때까지입니다.

// • Max-age=초: Expires와 비슷하지만 날짜 대신 초를 입력할 수 있습니다. 해당 초가 지나면 쿠기가 제거됩니다. Expires보다 우선합니다.

// • Domain=도메인명: 쿠키가 전송될 도메인을 특정할 수 있습니다. 기본값은 현재 도메인입니다.

// • Path=URL: 쿠키가 전송될 URL을 특정할 수 있습니다. 기본값은 ‘/’이고, 이 경우 모든 URL에서 쿠키를 전송할 수 있습니다.

// • Secure: HTTPS일 경우에만 쿠키가 전송됩니다.

// • HttpOnly: 설정 시 자바스크립트에서 쿠키에 접근할 수 없습니다. 쿠키 조작을 방지하기 위해 설정하는 것이 좋습니다.